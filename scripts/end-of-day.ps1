# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\end-of-day.ps1

Write-Host "üåÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è" -ForegroundColor Cyan
Write-Host "=========================" -ForegroundColor Cyan

$Date = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
Write-Host "–î–∞—Ç–∞: $Date" -ForegroundColor Yellow

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞ –¥–µ–Ω—å
Write-Host "`nüìù –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞ –¥–µ–Ω—å..." -ForegroundColor Green
$TodayChanges = Get-ChildItem "." -Recurse -File -Exclude "node_modules" | 
    Where-Object { $_.LastWriteTime.Date -eq (Get-Date).Date } |
    Sort-Object LastWriteTime -Descending

if ($TodayChanges.Count -gt 0) {
    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: $($TodayChanges.Count)" -ForegroundColor Green
    Write-Host "   –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Gray
    
    $FileTypes = @{}
    foreach ($File in $TodayChanges) {
        $Extension = $File.Extension
        if ($FileTypes.ContainsKey($Extension)) {
            $FileTypes[$Extension]++
        } else {
            $FileTypes[$Extension] = 1
        }
        
        $RelativePath = $File.FullName.Replace((Get-Location).Path + "\", "")
        Write-Host "   - $RelativePath" -ForegroundColor Gray
    }
    
    Write-Host "`n   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ñ–∞–π–ª–æ–≤:" -ForegroundColor Gray
    foreach ($Type in $FileTypes.GetEnumerator() | Sort-Object Value -Descending) {
        Write-Host "   - $($Type.Key): $($Type.Value)" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è" -ForegroundColor Yellow
}

# 2. –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –±—ç–∫–∞–ø
Write-Host "`nüíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞..." -ForegroundColor Green
$BackupDate = Get-Date -Format "yyyy-MM-dd-HHmm"
$BackupName = "focus-app-end-of-day-$BackupDate"
$BackupPath = "..\backups\$BackupName"

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É backups –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (-not (Test-Path "..\backups")) {
    New-Item -ItemType Directory -Path "..\backups" | Out-Null
}

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
Copy-Item -Path "." -Destination $BackupPath -Recurse -Exclude @("node_modules", ".git", "build", "dist", "*.log")

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—ç–∫–∞–ø–µ
$BackupInfo = @"
# –ë—ç–∫–∞–ø –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è

**–ò–º—è –±—ç–∫–∞–ø–∞:** $BackupName
**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** $Date
**–¢–∏–ø:** –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è

## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è
- –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $($TodayChanges.Count)
- –¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤: $($FileTypes.Keys -join ', ')

## –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
$($TodayChanges | ForEach-Object { 
    $RelativePath = $_.FullName.Replace((Get-Location).Path + "\", "")
    "- $RelativePath ($($_.LastWriteTime.ToString('HH:mm')))"
} | Out-String)

## –ó–∞–¥–∞—á–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- [ ] –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
- [ ] –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–∞–ø–∫—É –±—ç–∫–∞–ø–∞
2. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≤ 'focus-app'
3. –í—ã–ø–æ–ª–Ω–∏—Ç—å: npm install
4. –ó–∞–ø—É—Å—Ç–∏—Ç—å: npm start
"@

$BackupInfo | Out-File -FilePath "$BackupPath\BACKUP_INFO.md" -Encoding UTF8

$BackupSize = (Get-ChildItem $BackupPath -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
Write-Host "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BackupName ($([math]::Round($BackupSize, 2)) MB)" -ForegroundColor Green

# 3. –û–±–Ω–æ–≤–ª—è–µ–º CHANGELOG.md
Write-Host "`nüìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CHANGELOG.md..." -ForegroundColor Green
$ChangelogPath = "CHANGELOG.md"
if (Test-Path $ChangelogPath) {
    $ChangelogContent = Get-Content $ChangelogPath -Raw
    $NewEntry = @"

### –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è - $(Get-Date -Format "yyyy-MM-dd HH:mm")
- –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: $BackupName
- –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $($TodayChanges.Count)
- –¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤: $($FileTypes.Keys -join ', ')
"@
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "–ù–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ"
    $UpdatedContent = $ChangelogContent -replace "## \[–ù–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ\] - 2024-08-17", "## [–ù–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ] - 2024-08-17$NewEntry"
    $UpdatedContent | Out-File -FilePath $ChangelogPath -Encoding UTF8
    Write-Host "‚úÖ CHANGELOG.md –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
}

# 4. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∑–∞–¥–∞—á–∞–º–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
Write-Host "`nüìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –Ω–∞ –∑–∞–≤—Ç—Ä–∞..." -ForegroundColor Green
$TomorrowTasks = @"
# –ó–∞–¥–∞—á–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - $(Get-Date).AddDays(1).ToString('yyyy-MM-dd')

## –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
- [ ] –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
- [ ] –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

## –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏
- [ ] –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- [ ] –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
- [ ] –ò—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–≥–∏

## –ó–∞–º–µ—Ç–∫–∏
- –°–µ–≥–æ–¥–Ω—è –∏–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $($TodayChanges.Count)
- –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤: $($FileTypes.Keys -join ', ')
- –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø: $BackupName

## –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
```powershell
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
.\scripts\daily-check.ps1

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
npm start

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
.\scripts\auto-backup.ps1 "new-feature"
```
"@

$TomorrowTasksPath = "TOMORROW_TASKS.md"
$TomorrowTasks | Out-File -FilePath $TomorrowTasksPath -Encoding UTF8
Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∑–∞–¥–∞—á: $TomorrowTasksPath" -ForegroundColor Green

# 5. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
Write-Host "`nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è:" -ForegroundColor Cyan
Write-Host "   –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $($TodayChanges.Count)" -ForegroundColor Gray
Write-Host "   –°–æ–∑–¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤: 1" -ForegroundColor Gray
Write-Host "   –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: 2 (CHANGELOG.md, TOMORROW_TASKS.md)" -ForegroundColor Gray

Write-Host "`nüéâ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω! –•–æ—Ä–æ—à–µ–≥–æ –æ—Ç–¥—ã—Ö–∞! üåô" -ForegroundColor Green
Write-Host "   –ó–∞–≤—Ç—Ä–∞ –Ω–∞—á–Ω–∏—Ç–µ —Å: .\scripts\daily-check.ps1" -ForegroundColor Yellow

